//На каком языке мы будем пистаь год
plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"

}

allure {
    report {
        version.set("2.25.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.25.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}


//Откуда подтягивать все библиотечки
repositories {
    mavenCentral()
}


//Какие зависимости нам нужны.  Тут вопрос, не понятно что подразумевается ?
dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation(
            "com.codeborne:selenide-testng:7.0.6",
            'com.github.javafaker:javafaker:1.0.2',
            "org.junit.jupiter:junit-jupiter:5.9.3",
            'commons-io:commons-io:2.15.1',
            'com.codeborne:pdf-test:1.8.1',
            'io.rest-assured:json-schema-validator:5.3.1',
            'io.qameta.allure:allure-selenide:2.25.0',
            'io.rest-assured:rest-assured:5.4.0',
            'org.slf4j:slf4j-simple:2.0.7',
            "io.qameta.allure:allure-rest-assured:2.25.0"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

//Позволяет создать зелёную кнопочку, при помощи которой мы можем запускать тесты
test {
    useJUnitPlatform()
}

// Задача для запуска тестов с тегом "smoke"
tasks.register('smoke', Test) {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
    }
    useJUnitPlatform {
        includeTags("smoke")
    }
}

// Задача для запуска тестов с тегом "regress"
tasks.register('regress', Test) {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
    }
    useJUnitPlatform {
        includeTags("regress")
    }
}

// Гредл задача с именем simple_test с типом Test (Будет выполнять только задачи типа).Включает только тесты c tag = sipmle
task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task api_test(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }

    task web_test(type: Test) {
        useJUnitPlatform {
            includeTags("web")
        }
    }

}

